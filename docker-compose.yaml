version: "3.7"
services:
  jaeger:
    networks:
      - backend
    image: jaegertracing/all-in-one
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
      - "./sampling_strategies.json:/etc/jaeger/sampling_strategies.json"
    command:
      - "--query.base-path"
      - "/jaeger/ui"
      - "--memory.max-traces"
      - "10000"
      - "--prometheus.server-url"
      - "http://prometheus:9090"
#    command: --query.ui-config /etc/jaeger/jaeger-ui.json --log-level debug --metrics-backend prometheus --metrics-http-route /metrics
    environment:
      - SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling_strategies.json
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
    ports:
      - "5775:5775/udp"
      - "14250:14250"
      - "14268:14268"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "16686:16686"
      - "16685:16685"
      - "5778:5778"
      - "4317:4317"
  otel_collector:
    networks:
      - backend
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - "./otel-collector-config.yml:/etc/otelcol/otel-collector-config.yml"
    command: --config /etc/otelcol/otel-collector-config.yml
    depends_on:
      - jaeger
  activity:
      networks:
        - backend
      image: ammbra/activity:2.0.6
      ports:
        - "8082:8080"
      command: ["-Dquarkus.opentelemetry.tracer.exporter.jaeger.endpoint=http://jaeger:14250/api/traces", "-Dquarkus.http.port=8080"]
      depends_on:
          - otel_collector
          - jaeger
  hobby:
      networks:
        - backend
      image: ammbra/hobby:2.0.6
      ports:
        - "8080:8080"
      depends_on:
        - otel_collector
        - jaeger
        - activity
  prometheus:
    networks:
      - backend
    image: prom/prometheus:latest
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
networks:
  backend:
